[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Angelos\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Angelos\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.5 (Oracle Corporation Java 23)
[debug] Load.defaultLoad until apply took 118.5087ms
[debug]           Load.loadUnit: plugins took 133.6845ms
[debug]           Load.loadUnit: defsScala took 0.2914ms
[debug] [Loading] Scanning directory C:\Users\Angelos\Desktop\tutorials\scala\Playground\FlowControl\project
[debug]             Load.loadUnit: mkEval took 7.649ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Angelos\Desktop\tutorials\scala\Playground\FlowControl\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.3771 ms
[info] loading settings for project flowcontrol-build from idea.sbt ...
[debug]               Load.resolveProject(flowcontrol-build) took 49.9752ms
[debug]             Load.loadTransitive: finalizeProject(Project(id flowcontrol-build, base: C:\Users\Angelos\Desktop\tutorials\scala\Playground\FlowControl\project, plugins: List(<none>))) took 79.3872ms
[debug] [Loading] Done in C:\Users\Angelos\Desktop\tutorials\scala\Playground\FlowControl\project, returning: (flowcontrol-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3523.7295ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.1184ms
[debug]         Load.loadUnit(file:/C:/Users/Angelos/Desktop/tutorials/scala/Playground/FlowControl/project/, ...) took 3674.2889ms
[debug]       Load.apply: load took 3818.6424ms
[debug]       Load.apply: resolveProjects took 6.5916ms
[debug]       Load.apply: finalTransforms took 79.0277ms
[debug]       Load.apply: config.delegates took 15.295ms
[debug]       Load.apply: Def.make(settings)... took 467.2116ms
[debug]       Load.apply: structureIndex took 94.7868ms
[debug]       Load.apply: mkStreams took 1.6727ms
[info] loading project definition from C:\Users\Angelos\Desktop\tutorials\scala\Playground\FlowControl\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6441.313ms
[debug]     Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\Angelos\Desktop\tutorials\scala\Playground\FlowControl
[debug]       Load.loadUnit: mkEval took 0.3368ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.0951 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 51.5992ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Angelos\Desktop\tutorials\scala\Playground\FlowControl, plugins: List(<none>))) took 59.8949ms
[debug] [Loading] Done in C:\Users\Angelos\Desktop\tutorials\scala\Playground\FlowControl, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2611.908ms
[debug]     Load.loadUnit: cleanEvalClasses took 49.8696ms
[debug]   Load.loadUnit(file:/C:/Users/Angelos/Desktop/tutorials/scala/Playground/FlowControl/, ...) took 9105.5852ms
[debug] Load.apply: load took 9130.6962ms
[debug] Load.apply: resolveProjects took 0.219ms
[debug] Load.apply: finalTransforms took 68.5057ms
[debug] Load.apply: config.delegates took 0.7869ms
[debug] Load.apply: Def.make(settings)... took 222.7463ms
[debug] Load.apply: structureIndex took 66.0069ms
[debug] Load.apply: mkStreams took 0.0052ms
[info] set current project to FlowControl (in build file:/C:/Users/Angelos/Desktop/tutorials/scala/Playground/FlowControl/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
